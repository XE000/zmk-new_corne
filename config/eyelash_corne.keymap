#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        shiftcaps: shiftcaps {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;

            label = "SHIFTCAPS";
            tapping-term-ms = <150>;
        };

        fwdbckslh: fwdbckslh {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp FSLH>, <&kp BSLH>;

            label = "FWDBCKSLH";
            tapping-term-ms = <150>;
        };

        rtnsemicol: rtnsemicol {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp ENTER>, <&kp SEMICOLON>;

            label = "RTNSEMICOL";
            tapping-term-ms = <150>;
        };

        SPCDOT: SPCDOT {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp SPACE>, <&kp PERIOD>;

            label = "SPCDOT";
            tapping-term-ms = <150>;
        };

        holdtap: holdtap {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLDTAP";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    macros {
        ifblock: ifblock {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp I &kp F &kp LPAR &kp RPAR &kp RBKT &kp RBRC>;
            label = "IFBLOCK";
        };

        widgetclass: widgetclass {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp C &kp L &kp A &kp S &kp S &kp SPACE &kp LS(M) &kp Y &kp LS(W) &kp I &kp D &kp G &kp E &kp T &kp SPACE &kp E &kp X &kp T &kp E &kp N &kp D &kp S &kp SPACE &kp LS(S) &kp T &kp A &kp T &kp E &kp L &kp E &kp S &kp S &kp LS(W) &kp I &kp D &kp G &kp E &kp T &kp SPACE &kp RBKT &kp SPACE &kp C &kp O &kp N &kp S &kp T &kp SPACE &kp LS(M) &kp Y &kp LS(W) &kp I &kp D &kp G &kp E &kp T &kp LPAR &kp RPAR &kp SEMI &kp RBRC>;
            label = "WIDGETCLASS";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp ESC     &kp Q             &kp W  &kp E     &kp R          &kp T                                      &kp PAGE_UP             &kp Y             &kp U                 &kp I     &kp O      &kp P          &kp RET
&kp TAB     &kp A             &kp S  &kp D     &kp F          &kp G                            &kp HOME  &kp LG(SPACE)  &kp END  &kp H             &kp J                 &kp K     &kp L      &kp SEMICOLON  &kp SINGLE_QUOTE
&shiftcaps  &kp LEFT_CONTROL  &kp Z  &kp X     &kp C          &kp V             &kp LA(TAB)              &kp PAGE_DOWN           &kp B             &kp N                 &kp M     &kp COMMA  &kp PERIOD     &kp QUESTION
                                     &kp LGUI  &kp BACKSPACE  &holdtap 1 SPACE                                                   &holdtap 2 SPACE  &holdtap 3 BACKSPACE  &kp RALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        layer_1 {
            display-name = "NUMSYM";
            bindings = <
&kp GRAVE   &kp N1       &kp N2        &kp N3                &kp N4                 &kp N5                                             &kp UP_ARROW                     &kp N6        &kp N7            &kp N8             &kp N9          &kp N0           &kp CARET
&kp DOLLAR  &kp AT_SIGN  &kp PLUS      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp EXCLAMATION                    &kp LEFT_ARROW  &kp ENTER       &kp RIGHT_ARROW  &kp EQUAL     &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp MINUS       &kp PERCENT      &trans
&fwdbckslh  &kp POUND    &kp ASTERISK  &kp LESS_THAN         &kp GREATER_THAN       &kp AMPERSAND    &kp LG(PERIOD)                    &kp DOWN_ARROW                   &kp RS(PIPE)  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp UNDERSCORE  &kp RIGHT_SHIFT  &kp RIGHT_CONTROL
                                       &kp SQT               &trans                 &kp QUESTION                                                                        &kp COLON     &trans            &kp COMMA
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            display-name = "Fn";
            bindings = <
&studio_unlock  &kp F1        &kp F2        &kp F3        &kp F4        &kp F5                                           &mmv MOVE_UP                     &kp F6       &kp F7     &kp F8       &kp F9      &kp F10         &trans
&bt BT_CLR      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                     &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &bootloader  &mkp LCLK  &mkp MCLK    &mkp RCLK   &kp F11         &kp F12
&bt BT_CLR_ALL  &sys_reset    &trans        &bootloader   &trans        &trans        &rgb_ug RGB_EFF                    &mmv MOVE_DOWN                   &trans       &trans     &bootloader  &sys_reset  &kp SCROLLLOCK  &kp PAUSE_BREAK
                                            &trans        &trans        &mkp MB4                                                                          &mkp MB5     &trans     &trans
            >;

            sensor-bindings = <&rgb_encoder>;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans                            &kp UP_ARROW                     &trans  &trans        &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &ifblock  &trans            &kp LEFT_ARROW  &kp ENTER       &kp RIGHT_ARROW  &trans  &widgetclass  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans                    &kp DOWN_ARROW                   &trans  &trans        &trans  &trans  &trans  &trans
                        &trans  &trans    &trans                                                             &trans  &trans        &trans
            >;

            label = "macros";
            sensor-bindings = <&scroll_encoder>;
        };
    };
};
