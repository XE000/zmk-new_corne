#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        shiftcaps: shiftcaps {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;

            label = "SHIFTCAPS";
        };

        fwdbckslh: fwdbckslh {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp FSLH>, <&kp BSLH>;

            label = "FWDBCKSLH";
        };

        rtnsemicol: rtnsemicol {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp ENTER>, <&kp SEMICOLON>;

            label = "RTNSEMICOL";
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp ESC    &kp Q       &kp W  &kp E     &kp R  &kp T                                &kp PAGE_UP             &kp Y        &kp U          &kp I     &kp O           &kp P           &mo 0
&kp TAB    &kp A       &kp S  &kp D     &kp F  &kp G                      &kp HOME  &kp LG(SPACE)  &kp END  &kp H        &kp J          &kp K     &kp L           &kp UP_ARROW    &mo 2
&kp LCTRL  &shiftcaps  &kp Z  &kp X     &kp C  &kp V        &kp C_MUTE              &kp PAGE_DOWN           &kp B        &kp N          &kp M     &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW
                              &kp LGUI  &mo 1  &rtnsemicol                                                  &rtnsemicol  &kp BACKSPACE  &kp RALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "NUMSYM";
            bindings = <
&kp GRAVE   &kp N1       &kp N2        &kp N3                &kp N4                 &kp N5                                     &mmv MOVE_UP                     &kp N6        &kp N7            &kp N8             &kp N9          &kp N0       &trans
&kp DOLLAR  &kp AT_SIGN  &kp PLUS      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp EXCLAMATION            &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp EQUAL     &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp MINUS       &kp PERCENT  &trans
&trans      &kp POUND    &kp ASTERISK  &kp LESS_THAN         &kp GREATER_THAN       &kp AMPERSAND    &trans                    &mmv MOVE_DOWN                   &kp RS(PIPE)  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp UNDERSCORE  &kp CARET    &trans
                                       &kp SQT               &kp LEFT_SHIFT         &kp QUESTION                                                                &kp COLON     &kp RIGHT_SHIFT   &fwdbckslh
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&studio_unlock  &kp F1        &kp F2        &kp F3        &kp F4        &kp F5                                            &rgb_ug RGB_BRI                   &kp F6       &kp F7     &kp F8       &kp F9      &kp F10          &kp F11
&bt BT_CLR      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                     &rgb_ug RGB_SAD  &rgb_ug RGB_TOG  &rgb_ug RGB_SAI  &bootloader  &mkp LCLK  &mkp MCLK    &mkp RCLK   &kp PRINTSCREEN  &kp F12
&bt BT_CLR_ALL  &sys_reset    &trans        &bootloader   &trans        &trans        &rgb_ug RGB_EFF                     &rgb_ug RGB_BRD                   &trans       &trans     &bootloader  &sys_reset  &kp SCROLLLOCK   &kp PAUSE_BREAK
                                            &trans        &trans        &mkp MB4                                                                            &mkp MB5     &trans     &trans
            >;

            sensor-bindings = <&rgb_encoder>;
        };
    };
};
